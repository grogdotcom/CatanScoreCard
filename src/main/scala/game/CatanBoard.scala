package game

import score.{Hex, Port, ResourceSet, Roll}

class CatanBoard {

  // length should be 72
  val roadGraph = Seq((0, 1), (0, 29), (1, 2), (2, 30), (2, 3), (3, 4), (4, 32), (4, 5),
    (5, 6), (6, 7), (7, 33), (7, 8), (8, 9), (9, 35), (9, 10), (10, 11), (11, 12), (12, 36),
    (12, 13), (13, 14), (14, 38), (14, 15), (15, 16), (16, 17), (17, 39), (17, 18), (18, 19),
    (19, 41), (19, 20), (20, 21), (21, 22), (22, 42), (22, 23), (23, 24), (24, 44), (24, 25),
    (25, 26), (26, 27), (27, 45), (27, 28), (28, 29), (29, 47), (30, 47), (30, 31), (31, 32),
    (31, 48), (32, 33), (33, 34), (34 ,35), (34, 49), (35, 36), (36, 37), (37, 38), (37, 50),
    (38, 39), (39, 40), (40, 51), (41, 42), (42, 43), (43, 52), (43, 44), (44, 45), (45, 46),
    (46 ,47), (46, 53), (48, 49), (48, 53), (49, 50), (50, 51), (51, 52), (52, 53)
  )

  // length should be 19
  val hexes = Seq(
    (0, 1, 2, 29, 30, 47),
    (2, 3, 4, 30, 31, 32),
    (4, 5, 6, 7, 32, 33),
    (7, 8, 9, 33, 34, 35),
    (9, 10, 11, 12, 35, 36),
    (12, 13, 14, 36, 37, 38),
    (14, 15, 16, 17, 38, 39),
    (17, 18, 19, 39, 40, 41),
    (19, 20, 21, 22, 41, 42),
    (22, 23, 24, 42, 43, 44),
    (24, 35, 26, 27, 44, 45),
    (27, 28, 29, 45, 46, 47),
    (30, 31, 46, 47, 48, 53),
    (31, 32, 33, 34, 48, 49),
    (34, 35, 36, 37, 49, 50),
    (37, 38, 39, 40, 50, 51),
    (40, 41, 42, 43, 51, 52),
    (43, 44, 45, 46, 52, 53),
    (48, 49, 50, 51, 52, 53)
  )


  def getResourcesForRoll(diceRoll: Roll): Map[CatanPlayer, ResourceSet]  = null

}

case class BuildingSpot(portOpt: Option[Port], hexes: Hex*)